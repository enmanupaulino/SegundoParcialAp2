@page "/RegistroLlamada/{CurrentId:int}"
@using SegundoParcial2.Models
@using SegundoParcial2.Controllers

<h3>Registro Llamada</h3>
<EditForm Model="@registros" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class=" form-group">
        <label for=" RegistroId">Id</label>
        <InputNumber @bind-Value="registros.RegistroId"></InputNumber>
        <button type="button" class=" btn-primary " @onclick="Buscar">Buscar</button>
        <ValidationMessage For="@(()=>registros.RegistroId)" />

    </div>
    <div class="form-group">
        <label for=" Descripcion">Descripcion</label>
        <InputText @bind-Value="registros.Descripcion" class="form-group" />
        <ValidationMessage For="@(()=>registros.Descripcion)" />
    </div>
    <div class="form-group">
        <label for=" Problema">Problema</label>
        <InputText @bind-Value="registros.Problema" class="form-group" />
        <ValidationMessage For="@(()=>registros.Problema)" />
    </div>
    <div class="form-group">
        <label for=" Solucion">Solucion</label>
        <InputText @bind-Value="registros.Solucion" class="form-group" />
        <ValidationMessage For="@(()=>registros.Solucion)" />
    </div>



    
        
    <button type="button" class="btn btn-outline-info" @onclick="Agregar">Agregar</button>

    <br />

    <div>
        <table class="table">
            <thead >
                <tr>
                    <th>Id</th>
                    <th>RegistroId</th>
                    <th>Problema</th>
                    <th>Solucion</th>
                    
                    <th></th>
                </tr>
            </thead>
            <tbody >
                @foreach (var item in registros.Detalle)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.RegistroId</td>
                        <th>@item.Problema</th>
                        <td>@item.Solucion</td>
                       
                        
                       
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="form-group">

        <button type="submit" class="btn btn-primary"> Guardar</button>
        <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
        <button type="button" class="btn btn-danger" @onclick="Limpiar">Limpiar</button>
    </div>

    <h5>@Mensaje</h5>



</EditForm>

@code {
    List<Registros> lista = new List<Registros>();








    private void Agregar()
    {

        {
            registros.Detalle.Add(new RegistroDetalle()
            {

                RegistroId = registros.RegistroId,
                Solucion = registros.Solucion,
                Problema = registros.Problema,

            });
        }

    }









    public Registros registros = new Registros();
    public string Mensaje;
    private String problema;
    private String solucion;
    private int Id;

    [Parameter]
    public int CurrentId { get; set; }
    protected override void OnInitialized()
    {
        ControllersLlamadas controllersLlamadas = new ControllersLlamadas();
        if (CurrentId != 0)
        {
            registros= controllersLlamadas.Buscar(CurrentId);
        }
    }

    public void Guardar()
    {
        ControllersLlamadas controllersLlamadas = new ControllersLlamadas();


        if (controllersLlamadas.Guardar(registros))
        {
            Mensaje = "Guardado correctamente";
            this.registros = new Registros();
            problema = string.Empty;
            solucion = string.Empty;
            Id = 0;

        }
        else
        {

            Mensaje = "Guardado";
            this.registros = new Registros();
        }

    }
    public void Limpiar()
    {
        this.registros = new Registros();

    }
    public void Buscar()
    {
        ControllersLlamadas controllersLlamadas = new ControllersLlamadas();

        var registro = controllersLlamadas.Buscar(registros.RegistroId);
        if (registro != null)
        {
            registros = registro;
            Mensaje = "LLamada encontrada";
        }
        else
        {
            this.registros = new Registros();
            Mensaje = "Llamada no encontrada";
        }

    }
    public void Eliminar()
    {
        ControllersLlamadas controllersLlamadas = new ControllersLlamadas();

        var registro = controllersLlamadas.Buscar(registros.RegistroId);
        if (registro != null)
        {
            if (controllersLlamadas.Eliminar(registro.RegistroId))
            {
                this.registros = new Registros();
                Mensaje = "LLamada eliminada";
            }
            else
            {
                this.registros = new Registros();
                Mensaje = "Error al Eliminar ";
            }
        }
    }


}
